Index: app/Http/Controllers/q3wMaterial/operations/q3wMaterialWriteOffOperationController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/Http/Controllers/q3wMaterial/operations/q3wMaterialWriteOffOperationController.php b/app/Http/Controllers/q3wMaterial/operations/q3wMaterialWriteOffOperationController.php
--- a/app/Http/Controllers/q3wMaterial/operations/q3wMaterialWriteOffOperationController.php	(revision 9a441c40d828b24056bb1bf38a184fca63c712bc)
+++ b/app/Http/Controllers/q3wMaterial/operations/q3wMaterialWriteOffOperationController.php	(revision 47466a69337ec9d8e97a92b5318c66c77a1acf1d)
@@ -373,11 +373,18 @@
                     ->firstOrFail();
 
                 if ($inputMaterial['amount'] > $sourceMaterial['amount']) {
-                    abort(400, 'Bad quantity for standard ' . $inputMaterial['standard_id']);
+                    abort(400, 'Bad amount for standard ' . $inputMaterial['standard_id']);
                 }
             } else {
                 $sourceMaterial = q3wMaterial::where('project_object', $requestData['project_object_id'])
                     ->where('standard_id', $inputMaterial['standard_id'])
+                    ->where(function ($query) use ($inputMaterial) {
+                        if (empty($inputMaterial['initial_comment_id'])) {
+                            $query->whereNull('comment_id');
+                        } else {
+                            $query->where('comment_id', $inputMaterial['initial_comment_id']);
+                        }
+                    })
                     ->firstOrFail();
 
                 if (round($inputMaterial['amount'] * $inputMaterial['quantity'], 2) > round($sourceMaterial['quantity'], 2)) {
@@ -605,6 +612,13 @@
             } else {
                 $material = q3wMaterial::where('project_object', $operation->source_project_object_id)
                     ->where('standard_id', $materialStandard->id)
+                    ->where(function ($query) use ($materialToWriteOff) {
+                        if (empty($materialToWriteOff['initial_comment_id'])) {
+                            $query->whereNull('comment_id');
+                        } else {
+                            $query->where('comment_id', $materialToWriteOff['initial_comment_id']);
+                        }
+                    })
                     ->first();
             }
 
Index: resources/views/materials/operations/write-off/new.blade.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/resources/views/materials/operations/write-off/new.blade.php b/resources/views/materials/operations/write-off/new.blade.php
--- a/resources/views/materials/operations/write-off/new.blade.php	(revision 9a441c40d828b24056bb1bf38a184fca63c712bc)
+++ b/resources/views/materials/operations/write-off/new.blade.php	(revision 47466a69337ec9d8e97a92b5318c66c77a1acf1d)
@@ -1220,15 +1220,17 @@
 
                         writeOffMaterialDataSource.store().createQuery().toArray().forEach((item) => {
                             if (item.standard_id === dataItem.standard_id) {
+                                let itemCommentId = item.initial_comment_id ? item.initial_comment_id : null;
                                 switch (dataItem.accounting_type) {
                                     case 2:
-                                        let itemComment = item.initial_comment_id ? item.initial_comment_id : null;
-                                        if (item.quantity === dataItem.quantity && itemComment === initialCommentId) {
+                                        if (item.quantity === dataItem.quantity && itemCommentId === initialCommentId) {
                                             calculatedAmount = Math.round((calculatedAmount - item.amount) * 100) / 100;
                                         }
                                         break;
                                     default:
-                                        calculatedQuantity = Math.round((calculatedQuantity - item.quantity * item.amount) * 100) / 100;
+                                        if (itemCommentId === initialCommentId) {
+                                            calculatedQuantity = Math.round((calculatedQuantity - item.quantity * item.amount) * 100) / 100;
+                                        }
                                 }
                             }
                         })
